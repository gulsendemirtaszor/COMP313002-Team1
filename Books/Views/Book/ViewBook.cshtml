@model SearchListViewModel

@using Books.Models;
@using System.IO;

@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@{
    Layout = "_LayoutPage";
}

@if (TempData["returnMessage"] == null)
{
    <h3 style="margin-top:30px;color:#1F618D"><i class="fa fa-eye"></i>&nbsp;@ViewBag.Title</h3>
    <hr />
}
else
{
    <h3 style="margin-top:30px;color:#1F618D"><i class="fa fa-eye"></i>&nbsp;@TempData["returnMessage"]</h3>
    <hr />
}

@if (TempData["successMessage"] != null)
{
    <div class="alert alert-success text-center">
        <i class="fa fa-check-circle"></i>&nbsp;@TempData["successMessage"]
    </div>
}

<table class="table table-bordered">
    <tbody>
        <tr>
            <td class="w-25 table-primary">Title:</td>
            <td>@Model.bookInfoListViewModel.book.Title</td>
        </tr>
        <tr>
            <td class="w-25 table-primary">Author:</td>
            <td>@Model.bookInfoListViewModel.book.Author</td>
        </tr>
        <tr>
            <td class="w-25 table-primary">Conditions:</td>
            <td>@Model.bookInfoListViewModel.book.Conditions</td>
        </tr>
        <tr>
            <td class="w-25 table-primary">Edition:</td>
            <td>@Model.bookInfoListViewModel.book.Edition</td>
        </tr>
        <tr>
            <td class="w-25 table-primary">Category:</td>
            @foreach (var c in Model.bookInfoListViewModel.Categories)
            {
                @if (c.Id == Model.bookInfoListViewModel.book.Category)
                {
                    <td>@c.Name</td>
                }
            }
        </tr>
        <tr>
            <td class="w-25 table-primary">Ad:</td>
            <td>@Model.bookInfoListViewModel.book.FullDescription)</td>            
        </tr>
        <tr>
            <td class="w-25 table-primary">Price:</td>
            <td>@Model.bookInfoListViewModel.book.Price</</td>
        </tr>
        <tr>
            <td class="w-25 table-primary">Thumbnail Image:</td>
            <td>
                @foreach (BookImage ri in Model.bookInfoListViewModel.MyBookImages
                  .Where(mr => mr.Id == Model.bookInfoListViewModel.book.Id))
                {
                    <img class="img-thumbnail" src="~/uploads/@ri.BookImageThumbnail" style="width:20%" />
                }
            </td>
        </tr>
        <tr>
            <td class="w-25 table-primary">Related Image(s):</td>
            <td>
                @foreach (BookImage ri in Model.bookInfoListViewModel.MyBookImages
                  .Where(mr => mr.Id == Model.bookInfoListViewModel.book.Id))
                {
                    DirectoryInfo dirInfo = new DirectoryInfo(
                        System.IO.Directory.GetCurrentDirectory() + "\\wwwroot\\uploads");

                    if (dirInfo != null)
                    {
                        FileInfo[] uploadedFiles = dirInfo.GetFiles();
                        foreach (FileInfo file in uploadedFiles)
                        {
                            if (ri.BookImageCode != null && ri.BookImageCode != "" && ri.BookImageCode != "0")
                            {
                                if (file.Name.Contains(ri.BookImageCode))
                                {
                                    <img class="img-thumbnail" src="~/uploads/@file.Name" style="width:20%" />
                                }
                            }
                        }
                    }
                }
            </td>
        </tr>
    </tbody>
</table>

<hr />
<center style="margin-bottom:80px">

    @if (TempData["pageRoute"] != null)
    {
        <a asp-action="Index" asp-controller="Book" class="btn btn-secondary w-25">Back to Home</a>
    }
    else
    {
        <a asp-action="ListBooks" asp-route-userName="@User.Identity.Name" class="btn btn-secondary w-25">Back to Home</a>
        @Html.ActionLink("Back to Search", "SearchResult", "Book", Model.bookInfoListViewModel.bookSearch, new { @class = "btn btn-primary" })
    }
</center>

@*<center>
        <table class="table">
            <tbody>
                <tr>
                    <td>Title:</td>
                    <td>@Model.book.Title</td>
                </tr>
                <tr>
                    <td>Author:</td>
                    <td>@Model.book.Author</td>
                </tr>
                <tr>
                    <td>Conditions:</td>
                    <td>@Model.book.Conditions</td>
                </tr>
                <tr>
                    <td>Edition:</td>
                    <td>@Model.book.Edition</td>
                </tr>
                @foreach (var c in Model.Categories)
                {
                    @if (c.Id == Model.book.Category)
                    {
                        <tr>
                            <td>Category:</td>
                            <td>@c.Name</td>
                        </tr>
                    }
                }
                <tr>
                    <td>Price:</td>
                    <td>@Model.book.Price</</td>
                </tr>
            </tbody>
        </table>
    </center>*@
